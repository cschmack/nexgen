<!-- dont include directly, use common.xml -->
<project name="test-common">

  <path id="jacoco.classpath">
    <fileset dir="${lib.dir}/test">
      <include name="**/*jacoco*.jar"/>
      <include name="**/*asm*.jar"/>
    </fileset>
  </path>


  <!-- junit support -->
  <macrodef name="test-units">  
    <element name="junit-args" optional="yes"/>
    <element name="junit-classpath" optional="yes"/>
    <attribute name="coverage" default="true" />
    <attribute name="include-pattern" default="**/*Test.java" />
    <attribute name="exclude-pattern" default="" />
    <attribute name="jvmargs" default="" />
    <attribute name="maxmemory" default="1028m" />
    <sequential>
      <delete dir="${reports.dir}/units"/>
      <mkdir dir="${reports.dir}/units"/>
      <delete dir="${report.dir}/coverage"/>

     <taskdef name="coverage" classname="org.jacoco.ant.CoverageTask" classpathref="jacoco.classpath"/>
     <taskdef name="agent" classname="org.jacoco.ant.AgentTask" classpathref="jacoco.classpath"/>
     <taskdef name="report" classname="org.jacoco.ant.ReportTask" classpathref="jacoco.classpath"/>
     <taskdef name="merge" classname="org.jacoco.ant.MergeTask" classpathref="jacoco.classpath"/>
     <taskdef name="dump" classname="org.jacoco.ant.DumpTask" classpathref="jacoco.classpath"/>

     <coverage destfile="${reports.dir}/jacoco.exec" enabled="@{coverage}">
      <junit printsummary="yes" 
        fork="yes" forkmode="once"
        haltonfailure="false"
        maxmemory="@{maxmemory}"
        failureProperty="test.failure">
          <classpath>
              <!-- load from test conf first -->
              <pathelement path="${test.dir}:${config.dir}"/>
              <!-- put coverage instrumented classes first on classpath -->
              <pathelement path="${coverage.build.dir}:${test.build.dir}:${build.dir}/"/>
              <path refid="test.classpath"/>
              <junit-classpath/>
          </classpath>
          
          <jvmarg line="-DconfigEnv=${user.config} @{jvmargs}" />
          <formatter type="xml"/>
          <batchtest todir="${reports.dir}/units">
            <fileset dir="${test.dir}">
              <include name="@{include-pattern}"/>
              <exclude name="@{exclude-pattern}"/>
            </fileset>
          </batchtest>
        </junit>
     </coverage>
     <fail message="Unit Tests Failed" if="test.failure" />
    
      <antcall target="-coverage-report">
        <param name="coverage.enabled" value="@{coverage}"/>
      </antcall> 
        
    </sequential>
  </macrodef>

  <target name="-coverage-report" if="${coverage.enabled}">
      <report>
         <executiondata>
          <file file="${reports.dir}/jacoco.exec"/>
        </executiondata>
                        
        <structure name="${ant.project.name}">
          <classfiles>
            <fileset dir="${build.dir}/"/>
          </classfiles>
          <sourcefiles encoding="UTF-8">
            <fileset dir="${src.dir}"/>
          </sourcefiles>
        </structure>
        <html destdir="${reports.dir}/coverage"/>
        <xml destfile="${reports.dir}/coverage/coverage_jacoco.xml"/>
      </report>
      <!-- https://issues.jenkins-ci.org/browse/JENKINS-10835 -->
      <copy file="${lib.dir}/ivy/support/report.dtd" todir="${reports.dir}/coverage"/>
      <xslt style="${lib.dir}/ivy/support/jacoco_to_emma.xslt" 
            in="${reports.dir}/coverage/coverage_jacoco.xml" 
            out="${reports.dir}/coverage/coverage.xml" >
            <!-- saxon or some other xslt2/xpath2 processor is required -->
          <classpath>
              <pathelement location="${lib.dir}/test/Saxon-HE.jar"/>
              <pathelement location="${lib.dir}/test/org.jacoco.report.jar"/>
              <path refid="jacoco.classpath"/>
          </classpath>
        <xmlcatalog>
          <dtd 
            publicId="-//JACOCO//DTD Report 1.0//EN"
            location="org/jacoco/report/xml/report.dtd"/>
        </xmlcatalog>
       </xslt>
  </target>

  
  <!-- cuke support -->
  
  <!-- default for jenkins to non-color mode, of course you can override this behavior with the macro -->
  <condition property="default.cuke.color" value="yes" else="no">
    <not><matches pattern="jenkins" string="${user.config}" /></not>
  </condition>
  
  
  <macrodef name="test-stories">
    <!-- classpath to use for junit, in addition to the defaults -->
    <element name="junit-classpath" optional="yes"/>
    <!-- any special jvm arguments -->
    <attribute name="jvmargs" default="" />
    <!-- enable coloring of the output, defaults to true for everyone except 'jenkins' -->
    <attribute name="color" default="${default.cuke.color}"/>
  
    <sequential>
      <delete dir="${reports.dir}/stories"/>
      <mkdir dir="${reports.dir}/stories"/>
      
      <condition property="cuke.color" value="" else="-m">
        <istrue value="@{color}"/>
      </condition>

      <java classname="cucumber.cli.Main" fork="true" failonerror="false" resultproperty="cucumber.exitstatus">
          <classpath>
            <!-- load from test conf first -->
            <pathelement path="${test.dir}:${config.dir}"/>
            <!-- put coverage instrumented classes first on classpath -->
            <pathelement path="${coverage.build.dir}:${test.build.dir}:${build.dir}/"/>
            <path refid="test.classpath"/>
            <junit-classpath/>
          </classpath>

          <!-- user configuration properties -->              
          <jvmarg line="-DconfigEnv=${user.config} @{jvmargs}" />

          <arg 
            line="--format junit:${reports.dir}/stories/cuke-report.xml --format pretty ${cuke.color} --glue biz.neustar.service.metrics ${test.base.dir}/stories"/>
      </java>

      <junitreport todir="${reports.dir}/stories">
          <fileset dir="${reports.dir}/stories">
              <include name="cuke-report.xml"/>
          </fileset>
          <report format="frames" todir="${reports.dir}/stories"/>
      </junitreport>

      <fail message="Cucumber failed">
          <condition>
              <not>
                  <equals arg1="${cucumber.exitstatus}" arg2="0"/>
              </not>
          </condition>
      </fail>
    </sequential>
  </macrodef>
  
  
  
  <!--  
  <macrodef name="test-stories">
    <element name="junit-args" optional="yes"/>
    <element name="junit-classpath" optional="yes"/>
    <attribute name="jvmargs" default="" />
    <attribute name="cukeVersion" default="0.4.3"/>
    <attribute name="cukeVerbose" default="false"/>
    <attribute name="cukeColor" default="yes"/>
    <attribute name="coverage" default="yes" />
  	-->

  
</project>

